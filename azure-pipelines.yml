trigger: none

pool:
  name: sid-agent-pool

variables:
  tfDir: '$(System.DefaultWorkingDirectory)/Terraform/rg-ceating'

parameters:
  - name: runTfsec
    displayName: "Run tfsec Security Scan?"
    type: boolean
    default: false

  - name: runTerraformPlan
    displayName: "Run Terraform Plan?"
    type: boolean
    default: false

jobs:
# -------------------------
# Job 1: Terraform Init + Plan
# -------------------------
- job: TerraformPlan
  displayName: "Terraform Init and Plan"
  condition: eq(${{ parameters.runTerraformPlan }}, true)
  steps:
    # Install Terraform
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'

    # Terraform init
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(tfDir)'
        backendServiceArm: 'my-connection'
        backendAzureRmStorageAccountName: 'siddharthsa11'
        backendAzureRmContainerName: 'sid'
        backendAzureRmKey: 'terra.tfstate'

    # Terraform plan
    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(tfDir)'
        environmentServiceNameAzureRM: 'my-connection'

# -------------------------
# Job 2: tfsec
# -------------------------
- job: tfsec
  displayName: security check
  condition: eq(${{ parameters.runTfsec }}, true)
  steps:
  - task: tfsec@1
    inputs:
      version: 'v1.26.0'
      dir: '$(System.DefaultWorkingDirectory)/Terraform/rg-ceating'
# -------------------------
# Job 3: Manual Approval
# -------------------------
- job: ManualApproval
  displayName: "Manual Approval for Apply"
  dependsOn: TerraformPlan
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))
  pool: server
  steps:
    - task: ManualValidation@0
      inputs:
        instructions: "Please approve to apply Terraform changes in main branch"
        onTimeout: 'reject'
        timeout: '1d'

# -------------------------
# Job 4: Terraform Apply
# -------------------------
- job: TerraformApply
  displayName: "Terraform Apply"
  dependsOn: ManualApproval
  condition: succeeded()
  steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'

    - task: TerraformTask@5
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(tfDir)'
        environmentServiceNameAzureRM: 'my-connection'
